{%- comment -%}
  ----------------------------------------------------------------------------------------------------------------------
  PRODUCT QUICK BUY
  ----------------------------------------------------------------------------------------------------------------------

  This component is used to render the quick buy content. It is important to note that this snippet must always be
  included inside a product template (you can find an example in the "main-product.liquid" section). The reason is that
  we want to re-use the settings of the merchant on their product page (which info they want to make it visible). To do
  that, we need to re-use the whole product page, and extract the quick-buy part (rendered here).

  ********************************************
  Supported variables
  ********************************************

  * product: the product to render
  * section: the section is implicitly available. Here, the section is always a "product" template section, so you can
  access all the information from the section
{%- endcomment -%}

{%- capture product_form_id -%}product-form-{{ product.id }}-{{ section.id }}{%- endcapture -%}
<template id="quick-buy-content">
  <p class="h5" slot="header">{{ 'product.general.choose_options' | t }}</p>

  <div class="quick-buy-modal__content">
    <button
      type="button"
      class="quick-buy-modal__close-button sm-max:hidden"
      is="dialog-close-button">
      <span class="sr-only">{{ 'general.accessibility.close' | t }}</span>
      {%- render 'icon' with 'close' -%}
    </button>

    <div class="quick-buy-modal__gallery-wrapper">
      {%- render 'product-gallery'
        , product: product
        , desktop_layout: 'carousel_dots'
        , mobile_controls: 'arrows'
        , enable_media_autoplay: section.settings.enable_media_autoplay
        , enable_video_looping: section.settings.enable_video_looping
        , enable_image_zoom: false
      -%}

      <div class="quick-buy-modal__mobile-info v-stack gap-1 justify-center text-center sm:hidden">
        <a href="{{ product.title }}" class="product-title h6">{{ product.title }}</a>
        {% render 'price-list'
          , product: product
          , variant: product.selected_or_first_available_variant
          , hide_unit_price: true
          , form_id: product_form_id
          , context: 'card' %}


      </div>
      <div style="display: none;">
        {%- render 'buy-buttons' form_id: product_form_id
        -%}
      </div>
    </div>

    <div class="quick-buy-modal__info-wrapper">
      {%- assign allow_blocks = '@app,vendor,title,price,payment_terms,separator,variant_picker,product_variations,line_item_property,buy_buttons' | split: ',' -%}
      {%- render 'product-info'
        , product: product
        , allow_blocks: allow_blocks
        , update_url: update_url -%}

      <button
        type="submit"
        style="margin-top: 1.5rem;"
        id="buy-button-linked"
        class="button w-full"
        form="product-form-{{ product.id }}-{{ section.id }}">
        Add to Cart


      </button>

      <a href="{{ product.url }}" class="quick-buy-modal__view-more link sm-max:hidden">{{ 'product.general.view_details' | t }}</a>
    </div>


  </div>


  <style>
    .button w-full {
      margin-top: 1.5rem;
    }
  </style>

  <script>
      document.addEventListener('click', function(event) {
      // Check if the clicked element or any of its parents have the 'block-swatch' class
      let targetElement = event.target;
      while (targetElement && !targetElement.classList.contains('block-swatch')) {
    targetElement = targetElement.parentElement;
      }

      // If a 'block-swatch' element was clicked
      if (targetElement && targetElement.classList.contains('block-swatch')) {
    // Remove 'is-selected' from all 'block-swatch' elements
    document.querySelectorAll('.block-swatch.is-selected').forEach(function(el) {
      el.classList.remove('is-selected');
    });

    // Add 'is-disabled' to all 'block-swatch' elements except the clicked one
    document.querySelectorAll('.block-swatch').forEach(function(el) {
      if (el !== targetElement) {
        el.classList.add('is-disabled');
      }
    });

    // Add 'is-selected' to the clicked 'block-swatch' element
    targetElement.classList.add('is-selected');
    // Remove 'is-disabled' in case it was added previously
    targetElement.classList.remove('is-disabled');
      }
    });
  </script>

</template>